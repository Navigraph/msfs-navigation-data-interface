on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

name: PR Checks

jobs:
  autolabel:
    uses: ./.github/workflows/autolabel.yml
    secrets: inherit

  filter:
    name: Register changed paths
    if: ${{ !github.event.pull_request.draft && !contains(github.event.pull_request.labels.*.name , 'release') }}
    runs-on: ubuntu-latest
    outputs:
      js-interface: ${{ steps.changes.outputs.js-interface }}
      example: ${{ steps.changes.outputs.example }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            js-interface:
              - 'src/js/**'

  lint:
    name: Lint 📝
    runs-on: ubuntu-latest
    needs: [filter]
    if: ${{ needs.filter.outputs.js-interface == 'true' && !github.event.pull_request.draft && !contains(github.event.pull_request.labels.*.name , 'release') }}
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install node modules
        run: bun i --frozen-lockfile

      - name: Run linting
        run: bun lint --max-warnings 0

  typecheck:
    name: Check types 🕵️‍♂️
    runs-on: ubuntu-latest
    needs: [filter]
    if: ${{ needs.filter.outputs.js-interface == 'true' && !github.event.pull_request.draft && !contains(github.event.pull_request.labels.*.name , 'release') }}
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install node modules
        run: bun i --frozen-lockfile

      - name: Check types
        run: bun typecheck

  build-test:
    name: Build & test 🛠️
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft && !contains(github.event.pull_request.labels.*.name , 'release') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          filter: blob:none

      - name: Create env file
        run: |
          echo NAVIGATION_DATA_SIGNED_URL=${{ secrets.NAVIGATION_DATA_SIGNED_URL }} >> .env
          echo SENTRY_URL=${{ secrets.SENTRY_URL }} >> .env

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install node modules
        run: bun i --frozen-lockfile

      - name: Build WASM
        run: bun run build:wasm && bun run package

      - name: Upload WASM module to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: wasm
          path: |
            ./wasm.zip
